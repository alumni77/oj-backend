<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zjedu.passport.mapper.UserRecordMapper">
    <resultMap id="map_UserHomeVo" type="com.zjedu.pojo.vo.UserHomeVO">
        <id column="uid" property="uid"/>
        <result column="username" property="username"/>
        <result column="school" property="school"/>
        <result column="signature" property="signature"/>
        <result column="nickname" property="nickname"/>
        <result column="github" property="github"/>
        <result column="blog" property="blog"/>
        <result column="avatar" property="avatar"/>
        <result column="title_name" property="titleName"/>
        <result column="title_color" property="titleColor"/>
        <result column="rating" property="rating"/>
        <result column="total" property="total"/>
        <collection property="scoreList" ofType="java.lang.Integer" select="getProblemScore" column="uid">
        </collection>
    </resultMap>

    <select id="getUserHomeInfo" resultMap="map_UserHomeVo">
        SELECT u.uuid as uid,u.username,u.nickname,u.gender,u.signature,u.school,u.github,u.blog,
        u.avatar,u.title_name,u.title_color,ur.rating,
        (SELECT COUNT(uid) FROM judge WHERE uid=u.uuid ) AS total
        FROM user_info u,user_record ur
        <where>
            u.uuid = ur.uid AND u.status = 0
            <if test="uid!=null">
                AND u.uuid = #{uid}
            </if>
            <if test="username!=null">
                AND u.username = #{username}
            </if>
        </where>
    </select>

    <!-- 子查询-->
    <select id="getProblemScore" resultType="java.lang.Integer">
        SELECT MAX(oi_rank_score) AS sum_score
        FROM judge
        WHERE uid = #{uid}
          AND score IS NOT NULL
        GROUP BY pid
    </select>

    <select id="getRecent7ACRank" resultType="com.zjedu.pojo.vo.ACMRankVO">
        SELECT u.uuid                                                          as uid,
               u.nickname,
               u.username,
               u.avatar,
               u.title_name,
               u.title_color,
               (SELECT COUNT(DISTINCT pid)
                FROM user_acproblem
                WHERE uid = u.uuid
                  and DATE(gmt_create) >= DATE_SUB(CURDATE(), INTERVAL 7 DAY)) AS ac
        FROM user_info u
        WHERE u.status = 0
        ORDER BY ac DESC, u.gmt_create DESC
        LIMIT 10
    </select>

    <select id="getACMRankList" resultType="com.zjedu.pojo.vo.ACMRankVO" useCache="true">
        SELECT u.uuid as uid,u.nickname,u.username,left(u.signature,100) as signature,u.avatar,
        u.title_name,u.title_color,
        (SELECT COUNT( DISTINCT pid ) FROM user_acproblem WHERE uid = u.uuid) AS ac,
        (SELECT COUNT(uid) FROM judge WHERE uid=u.uuid) AS total
        FROM user_info u
        <where>
            u.status = 0
            <if test="uidList != null and uidList.size() > 0">
                AND u.uuid in
                <foreach collection="uidList" item="uid" open="(" separator="," close=")">
                    #{uid}
                </foreach>
            </if>
        </where>
        ORDER BY ac DESC,total ASC
    </select>

    <select id="getOIRankList" resultType="com.zjedu.pojo.vo.OIRankVO" useCache="true">
        SELECT ui.uuid AS uid, ui.nickname, ui.username, left(ui.signature,100) as signature, ui.avatar,
        ui.title_name,ui.title_color , ( SELECT COUNT(DISTINCT pid) FROM user_acproblem WHERE uid = ui.uuid ) AS ac,
        ( SELECT COUNT(uid) FROM judge WHERE uid = ui.uuid ) AS total, ss.score AS score FROM user_info ui, (
        SELECT u.uuid AS uid, COALESCE(SUM(s.score),0) AS score FROM user_info u left join ( SELECT MAX(oi_rank_score)
        AS score, uid, pid FROM judge GROUP BY pid, uid ) s ON s.uid = u.uuid WHERE u.status = 0 GROUP BY u.uuid )
        ss
        <where>
            ss.uid = ui.uuid
            <if test="uidList != null and uidList.size() > 0">
                AND ui.uuid in
                <foreach collection="uidList" item="uid" open="(" separator="," close=")">
                    #{uid}
                </foreach>
            </if>
        </where>
        ORDER BY score DESC, ac DESC
    </select>

</mapper>